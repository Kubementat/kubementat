################################
# This pipeline builds a flutter example app via a provided Dockerfile and pushes it to the registry
# See push-image-tag for target registry tag
################################

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-pipeline-flutter-example
spec:
  params:
    # Platform config
    - name: docker-registry-base-url
      description: The docker registry base url with path to load the CI image for tekton task execution from
    - name: tekton-ci-image-name
      description: The image name to use for the automation run
      default: "ubuntu-ci-minimal"
    - name: tekton-ci-image-tag
      description: The image tag to use for the automation run
      default: "latest"

    # IMAGE PUSH CONFIG
    - name: docker-registry-secret-name
      description: The kubernetes secret to use to connect to the image destination registry
      default: "docker-registry-secret"
    - name: push-image-name
      description: The name of the image
    - name: push-image-tag
      description: The tag for the pushed images
      default: "latest"
    - name: set-tag-from-version-file
      description: Should the docker image tag be set from a version file (see path-to-version-file variable)
      default: "false"
    - name: path-to-version-file
      default: ""
      description: A path to the file containing the app version number (used with set-tag-from-version-file)
    - name: docker-build-context-subpath
      description: Subpath of the project repo where docker should be executed
    - name: extra-build-args
      description: Additional arguments to the docker build process
      default: ""
    - name: push-retries
      description: The number of retries when pushes fail
      default: "1"

  workspaces:
    - name: pipeline-workspace
  tasks:
    
    # clone automation source repo for build
    - name: git-clone-app
      taskRef:
        name: git-clone
      params:
        - name: git-url
          value: "https://github.com/edwardinubuntu/flutter-web-dockerfile.git"
        - name: git-project-name
          value: "flutter-web-dockerfile"
        - name: git-revision
          value: "master"
        - name: docker-registry-base-url
          value: "$(params.docker-registry-base-url)"
        - name: tekton-ci-image-name
          value: "$(params.tekton-ci-image-name)"
        - name: tekton-ci-image-tag
          value: "$(params.tekton-ci-image-tag)"
      workspaces:
        - name: workspace
          workspace: pipeline-workspace

    # build docker image
    - name: build-docker-image
      retries: 1
      runAfter:
        - git-clone-app
      taskRef:
        name: build-and-push-docker-image
      params:
        - name: path-to-context
          value: "/workspace/flutter-web-dockerfile/"
        - name: path-to-dockerfile-within-context
          value: Dockerfile
        - name: extra-build-args
          value: "$(params.extra-build-args)"
        - name: docker-registry-secret-name
          value: "$(params.docker-registry-secret-name)"
        - name: push-image-url
          value: "$(params.docker-registry-base-url)/$(params.push-image-name)"
        - name: push-image-tag
          value: "$(params.push-image-tag)"
        - name: push-retries
          value: "$(params.push-retries)"
        - name: set-tag-from-version-file
          value: "$(params.set-tag-from-version-file)"
        - name: path-to-version-file
          value: "$(params.path-to-version-file)"
        - name: docker-registry-base-url
          value: "$(params.docker-registry-base-url)"
        - name: tekton-ci-image-name
          value: "$(params.tekton-ci-image-name)"
        - name: tekton-ci-image-tag
          value: "$(params.tekton-ci-image-tag)"
      workspaces:
        - name: workspace
          workspace: pipeline-workspace
