apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo-copy
spec:
  description: |
    Skopeo is a command line tool for working with remote image registries.
    This task copies a docker image from one registry to another.

  workspaces:
  - name: workspace
    description: |
      The workspace folder with the dockerfile and context.
    mountPath: /workspace

  params:
    - name: source-image-url
      description: |
         URL of the image to be inspected
         e.g.: docker://registry.fedoraproject.org/fedora:latest
      type: string
    - name: source-docker-registry-username
      description: The source docker registry username
      default: ""
      type: string
    - name: source-docker-registry-secret-key-filepath
      description: The docker registry secret filepath within the platform_ config for logging into the source docker registry
      default: ""
      type: string

    - name: target-image-url
      description: |
         URL of the image to be inspected
         e.g.: docker://registry.fedoraproject.org/fedora:latest
      type: string
    - name: target-docker-registry-username
      description: The target docker registry username
      default: ""
      type: string
    - name: target-docker-registry-secret-key-filepath
      description: The docker registry secret filepath within the platform_ config for logging into the source docker registry
      default: ""
      type: string

    # standard CI image config
    - name: docker-registry-base-url
      description: The docker registry base url with path to load the CI image for tekton task execution from
    - name: docker-registry-secret-name
      description: The docker registry secret name for logging into the docker registry
      default: "docker-registry-secret"
    - name: tekton-ci-image-name
      description: The image name to use for the automation run
      default: "ubuntu-ci-minimal"
    - name: tekton-ci-image-tag
      description: The image tag to use for the automation run
      default: "latest"
  steps:
    - name: skopeo-copy
      env:
      - name: HOME
        value: /tekton/home
      - name: SOURCE_IMAGE_URL
        value: "$(params.source-image-url)"
      - name: SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH
        value: "$(params.source-docker-registry-secret-key-filepath)"
      - name: SOURCE_USERNAME
        value: "$(params.source-docker-registry-username)"

      - name: TARGET_IMAGE_URL
        value: "$(params.target-image-url)"
      - name: TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH
        value: "$(params.target-docker-registry-secret-key-filepath)"
      - name: TARGET_USERNAME
        value: "$(params.target-docker-registry-username)"
      image: quay.io/skopeo/stable
      script: |
        echo "Copy Source:"
        echo "$SOURCE_IMAGE_URL"
        echo ""
        echo "Copy Target:"
        echo "$TARGET_IMAGE_URL"

        # TODO: find a better solution to this cumbersome if statement
        echo ""
        if [[ "$SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" != "" && "$TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" != "" ]]; then
          echo "Using source key filepath: $SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH"
          echo "Using target key filepath: $TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH"
          echo ""
          skopeo copy "$SOURCE_IMAGE_URL" "$TARGET_IMAGE_URL" --src-creds "${SOURCE_USERNAME}:$(cat $SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH)" --dest-creds "${TARGET_USERNAME}:$(cat $TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH)"
        elif [[ "$SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" != "" && "$TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" == "" ]]; then
          echo "Using source key filepath: $SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH"
          skopeo copy "$SOURCE_IMAGE_URL" "$TARGET_IMAGE_URL" --src-creds "${SOURCE_USERNAME}:$(cat $SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH)"
          echo ""
        elif [[ "$SOURCE_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" == "" && "$TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH" != "" ]]; then
          echo "Using target key filepath: $TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH"
          skopeo copy "$SOURCE_IMAGE_URL" "$TARGET_IMAGE_URL" --dest-creds "${TARGET_USERNAME}:$(cat $TARGET_DOCKER_REGISTRY_SECRET_KEY_FILEPATH)"
        else
          echo "Using no authentication for the copy."
          skopeo copy "$SOURCE_IMAGE_URL" "$TARGET_IMAGE_URL"
        fi

      securityContext:
        runAsNonRoot: true
        runAsUser: 65532